class Solution {
public:
        //HASHMAP SOLUTION
//     int singleNonDuplicate(vector<int>& nums) {
//         unordered_map<int , int> ourmap;
        
//         for(int i=0;i<nums.size();i++){
//             ourmap[nums[i]]++;
//         }
        
//         for(auto i:ourmap){
//             if(i.second == 1){
//                 return i.first;
//             }
//         }
//         return -1;
        
//     }
    //USING BINARY SEARCH
        int singleNonDuplicate(vector<int>& nums) {
        
        int left=0,right=nums.size()-1;
           while(left<right){
               int mid=left + (right - left)/2;
               bool isEven=(right-mid)%2==0;
               if(nums[mid]==nums[mid-1]){
                   if(isEven){
                       right=mid-2;
                       
                   }else{
                       left=mid+1;
                   }
               }
               else if(nums[mid]==nums[mid+1]){
                   if(isEven){
                       left=mid+2;
                   }else{
                       right=mid-1;
                   }
               }else{
                   return nums[mid];
               }
           }
            return nums[left];
    }
};
